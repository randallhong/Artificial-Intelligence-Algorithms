In this implementation you will implement two machine learning methods in Python for classification: KNN and ANNs and compare their results.
1. Write a function that reads in the file hw5data.txt[1]. The first two values of each line in this file represent a data point (in 2D) and the number at the end of the line is the label of the data (0 or 1). The data points are continuous and the labels are binary.
2. Create a file called “knn.py”, which implements the knn algorithm. Test your algorithm by holding out 20% of the data and compute the error rate on the data. Don’t expect to classify it perfectly. You can also try visualizing your results. You will be asked to test with different values of k in the writeup.
3. Create a file called “ann.py”, which implements an ANN. The ANN should have 3 layers: an input layer, a hidden layer, and an output layer. Use the sigmoid thresholding function in your implementation with p = 1. Since this produces a continuous output, round the output to the nearest integer (0 or 1) to determine the class.
Train the network using the backpropagation algorithm (Figure 18.24 in the book). Test your algorithm by holding out 20% of the data of the data and compute the error rate on the data. You can also try visualizing your results. Don’t expect to classify it perfectly. You will be asked to test with different numbers of hidden layer neurons in the writeup.
